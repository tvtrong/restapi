version: 2

jobs:

  test:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.8.2
        environment:
          AWESOME_EMAIL_BACKEND: django.core.mail.backends.dummy.EmailBackend
          AWESOME_SECRET_KEY: stub
          AWESOME_USE_SENTRY: off
          AWESOME_DEBUG: off
          AWESOME_DATABASE_URL: postgresql://postgres@localhost/awesome_test_db
          AWESOME_CELERY_BROKER: redis://localhost:6379/1
          AWESOME_CELERY_TASK_ALWAYS_EAGER: on
      - image: postgres:12.2
        environment:
          POSTGRES_DB: awesome_test_db
      - image: redis:5.0.9
    steps:
      - checkout
      - restore_cache:
          key: python-deps-v1-{{ checksum "api/requirements-dev.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv .env
            . .env/bin/activate
            pip install -r api/requirements-dev.txt
      - save_cache:
          key: python-deps-v1-{{ checksum "api/requirements-dev.txt" }}
          paths:
            - ".env"
      - run:
          name: Check `black`
          command: . .env/bin/activate && fab test.black
      - run:
          name: Check `isort`
          command: . .env/bin/activate && fab test.isort
      - run:
          name: Check `pylama`
          command: . .env/bin/activate && fab test.pylama
      - run:
          name: Check `bandit`
          command: . .env/bin/activate && fab test.bandit
      - run:
          name: Check `safety`
          command: . .env/bin/activate && fab test.safety
      - run:
          name: Check `pylint`
          command: . .env/bin/activate && fab test.pylint
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          command: |
            . .env/bin/activate
            ./api/manage.py collectstatic --no-input
            fab test.run
      - store_test_results:
          path: ~/project/api/test-results

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
